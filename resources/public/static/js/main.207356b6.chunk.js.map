{"version":3,"sources":["clipperTheme.js","LaufendeBuchung/useAccountingRecords.js","UIComponents.js","Common/LabeledInput.js","KeyboardControls.js","Common/SelectForm.js","Table/NumberCell.js","Table/index.js","LaufendeBuchung/useBalance.js","Common/EmphasizableInput.js","LaufendeBuchung/TextInput.js","LaufendeBuchung/CurrencyInput.js","Common/DateInput.js","Common/Select.js","useUrlForRead.js","LaufendeBuchung/AccountingRecordForm.js","LaufendeBuchung/index.js","HauptMenue/index.js","Kontenabfrage/index.js","KontenSaldo/index.js","KontenSaldo/Reload.js","Konten/KontenRecordForm.js","Common/useEditableRecord.js","Konten/index.js","Guv/index.js","App.js","serviceWorker.js","index.js"],"names":["blue","clipperTheme","background","font","variable","variableBg","active","activeBg","minor","emphasize","header","indexSelector","r","parseInt","pos","failureAwareFetch","url","opts","fetch","then","ok","Error","statusText","json","useAccountingRecords","deps","useState","Map","accountingRecords","setAccountingRecords","arMessages","setMessages","loading","setLoading","useEffect","a","response","ars","slice","sort","b","reduce","ar","set","fetchAccountingRecords","saveAccountingRecord","accountingRecord","has","method","headers","body","JSON","stringify","msg","title","message","createAr","Grid","styled","OGrid","Button","span","props","theme","button","brightGrey","Emphasize","Minorize","UpperCase","p","Screen","div","Content","Scrollable","Hr","hr","Padding","StatusHeader","columns","middle","center","packageJson","version","width","join","children","right","HorSpacer","Centered","Loading","Failed","Small","Input","input","defaultProps","inputBg","Label","label","ValidationText","text","forwardRef","ref","RootButton","SGrid","KeyboardControls","KeyButton","type","submit","onClick","command","symbol","EditFormKeyboardControls","cancel","key","SelectForm","redirect","setRedirect","useKey","detectKeys","to","onSubmit","e","preventDefault","style","min","onChange","target","value","newRecordButtonText","ThRightAlign","th","round","raw","parseFloat","Math","toFixed","TdRightAlign","td","TdOrThRightAlign","Suffix","FractionAwarePadding","NumberCell","creditDebitSuffix","suffix","undefined","minus","str","v","amount","toLocaleString","evenOn1stDecimal","DateCell","TypeAwareCell","selector","rest","number","date","TableStyle","table","TrLinkable","tr","link","ThAlignable","alignRight","Table","cellspacing","cellpadding","attributes","map","att","name","values","onRowClick","keySelector","i","accountingSummary","c","customFooter","summarize","expressive","debit","credit","status","fetchBalance","debitAccount","useBalance","accountPlan","creditAccount","balanceErrored","setError","debitBalance","setDebitBalance","creditBalance","setCreditBalance","sum","fetchData","EmphasizableInput","LabeledInput","validationMsg","InputAlignedRight","step","rows","placeholder","size","list","id","options","o","useUrlForRead","result","setResult","error","fetchUrl","INVALID_ACCOUNT_MSG","INVALID_DATE_MSG","INVALID_TAX_MSG","TEXT_EMPTY_MSG","INVALID_SUM_MSG","isDate","isNaN","Date","parse","Saldo","AccountingRecordForm","accountPlanOptions","Object","keys","k","konto_nr","name_kont","taxes","useForm","defaultValues","handleSubmit","register","errors","reset","setCreditAccount","setDebitAccount","validTaxOptions","fasuch","readOnly","autoFocus","validate","accountedDate","required","t","fatext","indexOf","tax","toDomString","d","getDate","getMonth","getFullYear","LaufendeBuchung","positionNr","setPositionNrRaw","setPositionNr","dirty","setDirty","recordTemplate","setRecordTemplate","selectMode","editMode","selectPosition","next","defaultDate","get","alert","info","firstAr","useAlert","length","newMessage","success","Array","from","Flex","siteIndex","2","6","7","9","12","MenuEntry","MenuBlock","start","HauptMenue","site","setSite","onMenuSubmit","toString","createQuery","Kontenabfrage","setFrom","setTo","query","setQuery","accountOverview","aoErrored","apErrored","safeAccountPlan","accountConfig","acErrored","kklasse_name","account","KontenSaldo","accountNo","useParams","setAccount","gegen","Reload","param","KontenRecordForm","useEditableRecord","Konten","atts","loadingAtts","attsErrorerd","accountMap","accountList","no","setAccountNo","selectAccountNo","toLowerCase","Guv","months","ertraege","accumulated","forEach","month","aufwand","aufwendungen","ertrag","gewinn","push","App","path","Boolean","window","location","hostname","match","timeout","position","positions","BOTTOM_CENTER","ReactDOM","render","template","AlertTemplate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.207356b6.chunk.js","sourcesContent":["const blue = \"rgb(7,1,126)\"\nconst cyan = \"rgb(0,110,107)\"\nconst white = \"white\"\nconst yellow = \"rgb(253,255,0)\"\nconst brightGrey = \"rgb(179,179,179);\"\nconst darkGrey = '#5a5a5a'\n\nconst clipperTheme = {\n    background: blue,\n    font: brightGrey,\n\n    variable: blue,\n    variableBg: cyan,\n\n    active: blue,\n    activeBg: brightGrey,\n\n    minor: darkGrey,\n    emphasize: yellow,\n\n    header: white,\n};\n\nexport default clipperTheme","import { useEffect, useState } from 'react'\n\nexport const indexSelector = r => parseInt(r.pos)\n\nconst failureAwareFetch = (url, opts) => {\n    return fetch(url, opts)\n        .then(r => {\n            if (!r.ok) {\n                throw new Error(r.statusText + ' at ' + r.url)\n            }\n            return r.json()\n        })\n}\nfunction createSuccessMsgObj(msg) {\n    return { title: 'success', message: msg }\n}\n\nfunction useAccountingRecords(deps) {\n    const [accountingRecords, setAccountingRecords] = useState(new Map())\n    const [arMessages, setMessages] = useState([])\n    const [loading, setLoading] = useState(false)\n    useEffect(() => {\n        const fetchAccountingRecords = async () => {\n            setLoading(true)\n            try {\n                const response = await failureAwareFetch('/accounting-records')\n                const ars = response.slice(1)\n                    .sort((a, b) => indexSelector(b) - indexSelector(a))\n                    .reduce((a, ar) => {\n                        a.set(indexSelector(ar), ar)\n                        return a\n                    }, new Map())\n                setLoading(false)\n                setAccountingRecords(ars)\n            } catch (error) {\n                setLoading(false)\n                setMessages([...arMessages, error])\n            }\n        }\n        fetchAccountingRecords()\n    }, [...deps, arMessages])\n\n    function saveAccountingRecord(accountingRecord) {\n        const createAr = async () => {\n            try {\n                const url = accountingRecords.has(indexSelector(accountingRecord)) ? '/update-record' : '/create-record'\n                await failureAwareFetch(url, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ ...accountingRecord })\n                })\n                setMessages([...arMessages, createSuccessMsgObj('Buchung erfolgreich gespeichert')])\n            } catch (error) {\n                setMessages([...arMessages, error])\n            }\n        }\n        createAr()\n    }\n\n    return { accountingRecords, arMessages, saveAccountingRecord, loading }\n}\n\nexport default useAccountingRecords","import React from 'react'\nimport styled from 'styled-components'\nimport packageJson from './package.alias'\n\nimport { Grid as OGrid, Cell } from 'styled-css-grid'\n\nexport const Grid = styled(OGrid)`grid-gap:0;`\n\nexport const Pill = styled.span`\nbackground-color: ${props => props.theme.variableBg};\ncolor: ${props => props.theme.header};`\n\n// TODO: is there a nicer way to copy style from Pill?\nexport const Button = styled.button`\nbackground-color: ${props => props.theme.variableBg};\ncolor: ${props => props.active ? props.theme.header : props.theme.brightGrey};\nborder: 0;`\n\nexport const Emphasize = styled.span`\n@media not print {\n    color: ${props => props.theme.emphasize}\n}`\n\nexport const Minorize = styled.span`\ncolor: ${props => props.theme.minor}`\n\nexport const UpperCase = styled.p`\ntext-transform: uppercase`\n\nexport const Screen = styled.div`\n@media not print {\n    height: 95vh;\n}\ndisplay: block;\nmax-width: 1000px;\nmargin-left:auto;\nmargin-right:auto;\nmargin-top: 1em;`\n\nexport const Content = styled.div`\nheight: 100%;\ndisplay: flex;\nflex-flow: column;\noverflow:hidden;\n@media not print {border: 1px solid;}`\n\nexport const Scrollable = styled.div`\noverflow:scroll;\npadding:0 20px 0 20px;\nflex-grow : 1;`\n\nexport const Hr = styled.hr`\nmargin:0;\nborder:0.5px solid;`\n\nexport const Padding = styled.div`\npadding: 5px 20px 5px 20px;`\n\nexport function StatusHeader(props) {\n    return <>\n        <Grid columns={6}>\n            <Cell middle center>FIBU {packageJson.version}</Cell>\n            <Cell {...props} width={props.join ? 5 : 3}>{props.children}</Cell>\n            {!props.join && <Cell width={2} middle>{props.right}</Cell>}\n        </Grid>\n        <Hr />\n    </>\n}\n\nexport function HorSpacer() {\n    return <>&nbsp; &nbsp;</>\n}\n\nexport const Centered = styled.div`height: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;`\n\nexport function Loading() {\n    return <Centered><Emphasize>laedt...</Emphasize></Centered>\n}\n\nexport function Failed() {\n    return <Centered><Emphasize>Konnte Daten aufgrund eines Serverfehlers nicht laden</Emphasize></Centered>\n}","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\n\nimport { Emphasize } from '../UIComponents'\n\nconst Small = styled.span`font-size:smaller`\n\nexport const Input = styled.input`\ncolor: ${props => props.theme.variable};\nbackground-color: ${props => props.theme.variableBg};\nborder: none;\n&:focus {\n    color: ${props => props.theme.active};\n    background-color: ${props => props.theme.activeBg};\n    border:none;\n}`\nInput.defaultProps = {\n    theme: {\n        inputBg: \"white\",\n        input: \"black\"\n    }\n}\nexport const Label = styled.label`\nmargin-right: 7px;`\n\nexport const ValidationText = props => <Emphasize>\n    {'\\u26A0 '}<Small>{props.text}</Small>\n</Emphasize>\n\nfunction LabeledInput(props, ref) {\n    return <><Label>{props.label}\n    </Label><Input {...props} ref={ref} /></>\n}\nexport default forwardRef(LabeledInput)\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button as RootButton } from './UIComponents'\n\nconst Button = styled(RootButton)`\n  width: 100%;\n  font-size: 1em;\n`\nconst SGrid = styled.div`\n  display: flex;\n  align-content: flex-end;\n  justify-content: space-between;\n  @media print {\n    display: none;\n  }\n`\n\nexport default function KeyboardControls(props) {\n  return <SGrid columns={5}>{props.children}</SGrid>\n}\n\nexport function KeyButton(props) {\n  return (\n    <div>\n      {props.active && (\n        <Button\n          type={props.submit ? 'submit' : 'button'}\n          {...props}\n          onClick={props.command}\n        >\n          {props.symbol && props.symbol}\n          {props.text}\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport function EditFormKeyboardControls(props) {\n  return (\n    <KeyboardControls>\n      <KeyButton\n        active\n        type=\"reset\"\n        command={props.cancel}\n        key=\"ESC\"\n        text=\"ESC: Abbrechen\"\n      />\n      <KeyButton active text=\"&#8633; : naechstes Feld\" />\n      <KeyButton active text=\"&#8617; : speichern\" type=\"submit\" />\n    </KeyboardControls>\n  )\n}\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Cell } from 'styled-css-grid'\nimport useKey from 'use-key-hook'\n\nimport { Padding, Grid } from '../UIComponents'\n\nimport LabeledInput from '../Common/LabeledInput'\nimport KeyboardControls, { KeyButton } from '../KeyboardControls'\n\nfunction SelectForm(props) {\n    const [redirect, setRedirect] = useState(false)\n    useKey(() => setRedirect(true), { detectKeys: [27] });\n    return redirect ? <Redirect to='/' /> : <form onSubmit={e => {\n        e.preventDefault()\n        props.onSubmit()\n    }} >\n        <Padding>\n            <Grid columns={3}>\n                <Cell><LabeledInput\n                    {...props}\n                    type='number'\n                    style={{ width: '50px' }}\n                    min='1'\n                    onChange={e => props.onChange(e.target.value)}\n                /></Cell>\n            </Grid>\n        </Padding>\n        <KeyboardControls>\n            <KeyButton\n                active\n                text='ESC: Hauptmenue'\n                command={() => setRedirect(true)}\n            />\n            <KeyButton\n                active\n                text={' : ' + props.newRecordButtonText}\n                symbol='&#8617;'\n                command={() => props.onSubmit()}\n            />\n        </KeyboardControls>\n    </form>\n}\n\nexport default SelectForm","import React from 'react'\nimport styled from 'styled-components'\n\nconst ThRightAlign = styled.th`text-align:right;`\n\nconst amount = v => v < 0 ? -v : v\nexport const formatCurrency = n => new Intl.NumberFormat().format(round(n))\n\nconst isZero = v => round(v) === round(0)\nconst round = raw => raw && parseFloat(Math.round(raw * 100) / 100).toFixed(2);\nconst evenOn1stDecimal = v => (((v * 10) % 1) === 0 && v % 1 !== 0)\n\nconst TdRightAlign = styled.td`text-align:right;`\nconst TdOrThRightAlign = props => props.th ?\n    <ThRightAlign {...props} />\n    : <TdRightAlign {...props} />\n\nconst Suffix = ({ children }) => <>&nbsp;{children}</>\n\nconst FractionAwarePadding = styled.span`${({ value }) => ((value % 1) === 0) && 'padding-right: 1.85em;'}`\n\nexport const NumberCell = ({ children, th, creditDebitSuffix, suffix }) => {\n    const value = children\n    if (value === undefined)\n        return <TdOrThRightAlign th={th} />\n    if (isZero(value))\n        return <TdOrThRightAlign th={th}>0{(creditDebitSuffix || suffix) && <>&nbsp;&nbsp;</>}</TdOrThRightAlign>\n\n    const minus = (value < 0)\n    const str = (creditDebitSuffix ? amount(value) : value).toLocaleString()\n    return <TdOrThRightAlign th={th}>\n        {value && <><FractionAwarePadding value={value}>\n            {evenOn1stDecimal(value) ? str + '0' : str}\n        </FractionAwarePadding>\n            {suffix && <Suffix>{suffix}</Suffix>}\n            {creditDebitSuffix && <Suffix>{minus ? 'S' : 'H'}</Suffix>}\n        </>}\n    </TdOrThRightAlign>\n}\n\nexport default NumberCell","import React from 'react'\nimport styled from 'styled-components'\n\nimport NumberCell from './NumberCell'\n\nconst DateCell = styled.td`white-space: nowrap;`\nconst TypeAwareCell = props => {\n    const { selector, ...rest } = props\n    if (props.number)\n        return <NumberCell {...rest} />\n    if (props.date)\n        return <DateCell {...rest} />\n    return <td {...rest} />\n}\n\nconst TableStyle = styled.table`\n  width: 100%;\n  border-collapse:collapse;\n  @media print {\n      td {\n        border-bottom: 1px dotted;\n      }\n  }\n  th, td {\n    margin: 0;\n    padding: 3px 5px 3px 3px;\n  }\n  tr:nth-child(even) {\n      background-color: #06025e;\n  }\n  thead th {\n    border-bottom: 1px solid;\n  }\n  tfoot th {\n    border-top: 1px solid;\n  }`\nconst TrLinkable = styled.tr`\n${props => props.link && `\ncursor:pointer;\n&:hover {\n    background-color:`+ props.theme.variableBg + ` !important;\n    color:`+ props.theme.active + `;\n}\n`}`\n\nconst ThAlignable = styled.th`\n    text-align:${({ alignRight }) => alignRight ? 'right' : 'left'};`\n\nfunction Table(props) {\n    return <TableStyle cellspacing=\"0\" cellpadding=\"0\">\n        <thead>\n            <tr>\n                {props.attributes.map(att => <ThAlignable\n                    alignRight={att.number}\n                    number={att.number}\n                    key={att.name}>{att.name}\n                </ThAlignable>)}\n            </tr>\n        </thead>\n        <tbody>\n            {props.values && props.values.map(r =>\n                <TrLinkable\n                    link={props.onRowClick}\n                    onClick={() => props.onRowClick && props.onRowClick(r)}\n                    key={props.keySelector(r)}\n                >\n                    {props.attributes.map((att, i) => <TypeAwareCell\n                        {...att}\n                        key={i}>\n                        {att.selector(r)}\n                    </TypeAwareCell>)}\n                </TrLinkable>\n            )}\n        </tbody>\n        {(props.accountingSummary && props.values) && <tfoot><tr>\n            {props.attributes.map(c => {\n                const key = c.name\n                if (c.customFooter)\n                    return <NumberCell th creditDebitSuffix key={key}>\n                        {c.customFooter}\n                    </NumberCell>\n                if (c.summarize)\n                    return <NumberCell th suffix={c.summarize} key={key}>\n                        {props.values.reduce((a, r) => a + c.selector(r), 0)}\n                    </NumberCell>\n                if (c.expressive)\n                    return <NumberCell th creditDebitSuffix>\n                        {props.values.reduce((a, r) => a + r.debit - r.credit, 0)}\n                    </NumberCell>\n                return <NumberCell th key={key} />\n            })}\n        </tr></tfoot>\n        }\n        {props.children}\n    </TableStyle >\n}\nexport default Table","import { useEffect, useState } from 'react'\n\nconst failureAwareFetch = (url, opts) => {\n    return fetch(url, opts)\n        .then(r => {\n            if (!r.ok) {\n                throw new Error({\n                    ...r,\n                    name: r.status,\n                    status: r.status,\n                    message: r.statusText,\n                    url: r.url\n                })\n            }\n            return r.json()\n        })\n}\nconst fetchBalance = async (debitAccount) => {\n    return await failureAwareFetch('/balance?accountNo=' + debitAccount)\n}\n\nconst useBalance = ({ accountPlan, debitAccount, creditAccount }) => {\n    const [balanceErrored, setError] = useState(false)\n    const [debitBalance, setDebitBalance] = useState()\n    const [creditBalance, setCreditBalance] = useState()\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (accountPlan[debitAccount]) {\n                    const r = await fetchBalance(debitAccount)\n                    setDebitBalance(r.sum)\n                } else setDebitBalance(undefined)\n                if (accountPlan[creditAccount]) {\n                    const r = await fetchBalance(creditAccount)\n                    setCreditBalance(r.sum)\n                } else setCreditBalance(undefined)\n            } catch (error) {\n                setError(true)\n            }\n        }\n        fetchData()\n\n    }, [accountPlan, debitAccount, creditAccount])\n\n    return [{ creditBalance, debitBalance }, balanceErrored]\n}\n\nexport default useBalance","import styled from 'styled-components'\nimport LabeledInput from './LabeledInput'\n\nconst EmphasizableInput = styled(LabeledInput)`\n${props => props.emphasize && 'background-color:' + props.theme.emphasize + ';'}`\n\nexport default EmphasizableInput","import React, { forwardRef } from 'react'\nimport { ValidationText } from '../Common/LabeledInput'\nimport EmphasizableInput from '../Common/EmphasizableInput'\n\nfunction TextInput(props, ref) {\n    return <>\n        <EmphasizableInput {...props}\n            ref={ref} emphasize={props.validationMsg} />\n        {props.validationMsg && <ValidationText\n            text={props.validationMsg.message}\n        />}\n    </>\n}\n\nexport default forwardRef(TextInput)\n","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport EmphasizableInput from '../Common/EmphasizableInput'\n\nconst InputAlignedRight = styled(EmphasizableInput)`\ntext-align:right;`\n\nfunction CurrencyInput(props, ref) {\n\n    return <InputAlignedRight\n        {...props}\n        emphasize={props.validationMsg}\n        ref={ref}\n        type='number'\n        step='any' />\n}\nexport default forwardRef(CurrencyInput);","import React, { forwardRef } from 'react'\nimport { ValidationText } from './LabeledInput'\nimport EmphasizableInput from './EmphasizableInput'\n\nfunction DateInput(props, ref) {\n\n    return <><EmphasizableInput\n        rows={1}\n        {...props}\n        emphasize={props.validationMsg}\n        ref={ref}\n        placeholder='dd.mm.yyyy'\n        value={props.value}\n        type='date'\n    />\n        {props.validationMsg && <ValidationText\n            text={props.validationMsg.message}\n        />}\n    </>\n}\nexport default forwardRef(DateInput);","import React, { forwardRef } from 'react'\nimport { ValidationText } from './LabeledInput'\nimport EmphasizableInput from './EmphasizableInput'\n\nfunction Select(props, ref) {\n\n    return <>\n        <EmphasizableInput size={7}\n            {...props}\n            emphasize={props.validationMsg}\n            ref={ref}\n            list={props.name}\n        />\n        <datalist id={props.name}>\n            {props.options.map(o => <option\n                key={o.value}\n                value={o.value} >\n                {o.value} - {o.name}\n            </option>)}\n        </datalist>\n        {props.validationMsg && <ValidationText\n            text={props.validationMsg.message}\n        />}\n    </>\n}\n\nexport default forwardRef(Select)","import { useEffect, useState } from 'react'\n\nfunction useUrlForRead(url) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState()\n    useEffect(() => {\n        setLoading(true)\n        const fetchUrl = async () => {\n            try {\n                const response = await fetch(url)\n                    .then(r => {\n                        if (!r.ok) {\n                            throw new Error(r.statusText + ' at ' + r.url)\n                        }\n                        return r.json()\n                    })\n                setLoading(false)\n                setResult(response)\n            } catch (error) {\n                setLoading(false)\n                setError(error)\n            }\n        }\n        fetchUrl()\n    }, [url])\n    return { result, error, loading }\n}\n\nexport default useUrlForRead","import React, { useState, useEffect } from 'react'\nimport useForm from \"react-hook-form\";\nimport { EditFormKeyboardControls } from '../KeyboardControls'\nimport { Padding, Grid, Emphasize, HorSpacer, Loading } from '../UIComponents'\nimport { Cell } from 'styled-css-grid'\n\nimport useBalance from './useBalance'\n\nimport LabeledInput from '../Common/LabeledInput'\nimport TextInput from './TextInput'\nimport CurrencyInput from './CurrencyInput'\nimport DateInput from '../Common/DateInput'\nimport Select from '../Common/Select'\nimport useUrlForRead from '../useUrlForRead';\n\nconst INVALID_ACCOUNT_MSG = 'Konto ex. nicht'\nconst INVALID_DATE_MSG = 'Datum ex. nicht'\nconst INVALID_TAX_MSG = 'Steuerschl. ex. nicht'\nconst TEXT_EMPTY_MSG = 'Keinen Text eingegeben'\nconst INVALID_SUM_MSG = 'Keinen Betrag eingegeben'\n\nconst isDate = v => isNaN(Date.parse(v))\n\nconst Saldo = ({ value }) => <>Saldo {(value < 0 ? -value : value).toLocaleString()} {value < 0 ? 'S' : 'H'} </>\n\nfunction AccountingRecordForm(props) {\n\n    const { result: accountPlan, loading, error } = useUrlForRead('/account-plan')\n    const accountPlanOptions = Object.keys((accountPlan || {}))\n        .map(k => {\n            return {\n                value: accountPlan[k].konto_nr,\n                name: accountPlan[k].name_kont\n            }\n        })\n    const { result: taxesRaw /* find way to combine errors */ } = useUrlForRead('/taxes')\n    const taxes = (taxesRaw || [])\n    const { handleSubmit, register, errors, reset } = useForm({\n        defaultValues: props.defaultValues\n    });\n\n    useEffect(() => reset(props.defaultValues), [props.defaultValues, reset])\n\n    const [creditAccount, setCreditAccount] = useState()\n    const [debitAccount, setDebitAccount] = useState()\n    const [{ creditBalance, debitBalance }] = useBalance({ accountPlan, debitAccount, creditAccount })\n\n    const validTaxOptions = taxes.map(v => v.fasuch)\n\n    /* The loading condition ensures that the select input is rendered only when the app already received 'accountPlan' prop from api-call. The 'register' fn from 'react-form-hook'-lib takes args from 1st render only. As result the args are not updated, when accountPlan or taxes are loaded :/ */\n    // TODO: reproduce in Codesandbox and report lib-owner\n    if (error) return <p>Konnte Buchungsplan nicht vom Server laden.</p>\n    return loading ? <Loading /> : <form\n        onSubmit={handleSubmit(props.onSubmit)} >\n        <Padding>\n            <Grid columns={3}>\n                <Cell><LabeledInput\n                    name='pos'\n                    label='Position Nr.'\n                    size={6}\n                    readOnly={true}\n                    value={props.pos}\n                    ref={register}\n                /></Cell>\n\n                <Cell><DateInput\n                    name='date'\n                    label='Datum'\n                    autoFocus\n                    ref={register({\n                        validate: v => !isDate(v) || INVALID_DATE_MSG\n                    })}\n                    validationMsg={errors.date}\n                /></Cell>\n\n                <Cell><DateInput\n                    name='accountedDate'\n                    label='Buchungsdatum'\n                    ref={register({\n                        validate: v => !isDate(v) || INVALID_DATE_MSG\n                    })}\n                    validationMsg={errors.accountedDate}\n                /><br />\n                </Cell>\n            </Grid>\n\n            <br />\n            <Grid columns={debitBalance === undefined ? 1 : 3}>\n                <Cell><Select\n                    name='debitAccount'\n                    label=\"Konto Soll&nbsp;&nbsp;\"\n                    onChange={e => setDebitAccount(e.target.value)}\n                    options={accountPlanOptions}\n                    ref={register({\n                        validate: v => accountPlan[v] || INVALID_ACCOUNT_MSG\n                    })}\n                    validationMsg={errors.debitAccount}\n                />\n                </Cell>\n                {debitBalance !== undefined && <>\n                    <Cell><Emphasize>\n                        {debitBalance !== undefined && accountPlan[debitAccount] && accountPlan[debitAccount].name_kont}\n                    </Emphasize></Cell>\n                    <Cell><Emphasize>\n                        {debitBalance !== undefined && <Saldo value={debitBalance} />}\n                    </Emphasize></Cell>\n                </>}\n            </Grid>\n\n            <Grid columns={creditBalance === undefined ? 1 : 3}>\n                <Cell><Select\n                    name='creditAccount'\n                    label=\"Konto Haben&nbsp;\"\n                    onChange={e => setCreditAccount(e.target.value)}\n                    options={accountPlanOptions}\n                    ref={register({\n                        validate: v => accountPlan[v] || INVALID_ACCOUNT_MSG\n                    })}\n                    validationMsg={errors.creditAccount}\n                />\n                </Cell>\n                {creditBalance !== undefined && <>\n                    <Cell><Emphasize>\n                        {creditBalance !== undefined && accountPlan[creditAccount].name_kont}\n                    </Emphasize></Cell>\n                    <Cell><Emphasize>\n                        {creditBalance !== undefined && <Saldo value={creditBalance} />}\n                    </Emphasize></Cell>\n                </>}\n            </Grid>\n            <br />\n\n            <CurrencyInput\n                name='sum'\n                size={7}\n                label='Summe'\n                ref={register({ required: INVALID_SUM_MSG, min: 0 })}\n                validationMsg={errors.sum}\n            />\n            <HorSpacer />\n            <Select\n                size={7}\n                name='tax'\n                label='Steuerschl.'\n                options={taxes.map(t => { return { value: t.fasuch, name: t.fatext } })}\n                ref={register({ validate: v => (validTaxOptions.indexOf(v) > -1) || INVALID_TAX_MSG })}\n                validationMsg={errors.tax}\n            />\n            <br />\n            <TextInput\n                name='text'\n                label='Text&nbsp;'\n                size={30}\n                ref={register({ required: TEXT_EMPTY_MSG })}\n                validationMsg={errors.text}\n            />\n        </Padding>\n        <EditFormKeyboardControls cancel={props.cancel} />\n    </form>\n\n\n}\n\nexport default AccountingRecordForm","import React, { useEffect, useState } from 'react'\n\nimport { useAlert } from \"react-alert\";\nimport useKey from 'use-key-hook'\n\nimport useAccountingRecords, { indexSelector } from './useAccountingRecords'\nimport SelectForm from '../Common/SelectForm'\n\nimport { Hr, StatusHeader, Scrollable, Emphasize, Loading } from '../UIComponents'\nimport Table from '../Table'\n\nimport AccountingRecordForm from './AccountingRecordForm';\n\n/**\n * converts Date to standardized DOM string\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date\n * @param {Date} d \n */\nconst toDomString = d => `${d.getDate()}-${d.getMonth() + 1}-${d.getFullYear()}`\n\nfunction LaufendeBuchung() {\n    const [positionNr, setPositionNrRaw] = useState('')\n    const setPositionNr = p => setPositionNrRaw(parseInt(p))\n    const [dirty, setDirty] = useState(false)\n\n    const { accountingRecords, arMessages, saveAccountingRecord, loading } = useAccountingRecords([indexSelector, dirty])\n\n    const [recordTemplate, setRecordTemplate] = useState()\n    const selectMode = recordTemplate === undefined\n    const editMode = !selectMode\n\n    /** cancel on ESC */\n    const cancel = () => setRecordTemplate(undefined)\n    useKey(() => cancel(), { detectKeys: [27] });\n\n    /** select latest position from accounting records for new accounting record */\n    useEffect(() => {\n        if (accountingRecords.size > 0) {\n            const firstAr = accountingRecords.values().next().value\n            setPositionNr(indexSelector(firstAr) + 1)\n        }\n    }, [accountingRecords, dirty])\n    function selectPosition(pos) {\n        const newPos = accountingRecords.keys().next().value + 1\n        if (pos === newPos) {\n            const defaultDate = accountingRecords.size > 0 ? accountingRecords.values().next().value.date : toDomString(new Date())\n            setRecordTemplate({\n                date: defaultDate,\n                accountedDate: defaultDate\n            })\n        } else if (accountingRecords.has(pos)) {\n            if (pos !== positionNr)\n                setPositionNr(pos)\n            setRecordTemplate({ ...accountingRecords.get(pos) })\n        } else {\n            alert.info(`Position ${pos} nicht erlaubt.`)\n        }\n    }\n\n    /** alerting on errors and success */\n    const alert = useAlert()\n    useEffect(() => {\n        if (arMessages && arMessages.length > 0) {\n            const newMessage = arMessages[arMessages.length - 1]\n            if (newMessage instanceof Error) {\n                alert.error(newMessage.message)\n            } else if (newMessage.title && newMessage.title === 'success') {\n                // TODO: create contract for that -  do that in a place that has control over the transaction - it's somehow an effect\n                // perhaps with prop formState.isSubmitted from react-hook-form?\n                alert.success(newMessage.message)\n                cancel()\n                setDirty(!dirty)\n            } else alert.info(newMessage.message)\n        }\n    }, [arMessages])\n\n    return (\n        <>\n            <StatusHeader right='laufende Buchung'>\n                <Emphasize>\n                    {selectMode ? '' :\n                        (accountingRecords.has(positionNr) ? 'korrigiere ' : 'neue ')}\n                </Emphasize>\n            </StatusHeader>\n            {selectMode && <SelectForm\n                autoFocus\n                newRecordButtonText='neue Buchung'\n                label='Position Nr.'\n                value={positionNr}\n                onSubmit={() => selectPosition(positionNr)}\n                onChange={setPositionNr}\n            />}\n            {editMode && <AccountingRecordForm\n                onSubmit={saveAccountingRecord}\n                cancel={cancel}\n                pos={positionNr}\n                defaultValues={recordTemplate}\n            />}\n            <Hr />\n            {loading ? <Loading /> : <Scrollable>\n                <Table attributes={[\n                    { name: \"Pos.\", selector: r => r.pos },\n                    { name: \"Datum\", selector: r => r.date, date: true },\n                    { name: \"Soll\", selector: r => r.debitAccount },\n                    { name: \"Haben\", selector: r => r.creditAccount },\n                    { name: \"Summe\", selector: r => r.sum, number: true },\n                    { name: \"Text\", selector: r => r.text }\n                ]}\n                    values={Array.from(accountingRecords, ([k, v]) => v)}\n                    keySelector={indexSelector}\n                    onRowClick={v => selectPosition(indexSelector(v))} />\n            </Scrollable>}\n        </>\n    );\n}\n\nexport default LaufendeBuchung;\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\n\nimport { StatusHeader, Emphasize, Minorize } from '../UIComponents'\nimport LabeledInput from '../Common/LabeledInput'\n\nconst Flex = styled.div`\n  margin-top: 15px;\n  display: flex;\n  height: 100%;\n  justify-content: space-evenly;\n`\n\nconst siteIndex = {\n  2: '/accounts',\n  6: '/kontenabfrage',\n  7: '/konten-saldo',\n  9: '/laufende-buchung',\n  12: '/guv',\n}\n\nfunction MenuEntry(props) {\n  return (\n    <li>\n      {props.to ? <Link {...props} /> : <Minorize>{props.children}</Minorize>}\n    </li>\n  )\n}\nfunction MenuBlock({name, children, start = 1}) {\n  return (\n    <>\n      <Emphasize>{name}</Emphasize>\n      <ol start={start}>{children}</ol>\n    </>\n  )\n}\n\nfunction HauptMenue() {\n  const [redirect, setRedirect] = useState()\n  const [site, setSite] = useState('')\n  const [error, setError] = useState()\n\n  const alert = useAlert()\n  useEffect(() => {\n    error && alert.error(error)\n  }, [error])\n\n  const onMenuSubmit = e => {\n    e.preventDefault()\n    if (siteIndex[site]) {\n      setRedirect(siteIndex[site])\n    } else {\n      setSite('')\n      setError('ungueltige Menueauswahl')\n    }\n  }\n\n  return redirect ? (\n    <Redirect to={redirect} />\n  ) : (\n    <>\n      <StatusHeader middle>Hauptmenue</StatusHeader>\n      <Flex>\n        <div>\n          <MenuBlock name=\"Stammdaten\">\n            <MenuEntry>Steuerschluessel</MenuEntry>\n            <MenuEntry to={siteIndex[2]}>\n              Konten\n            </MenuEntry>\n            <MenuEntry>Reorganisation</MenuEntry>\n            <MenuEntry>Kontenbelegung</MenuEntry>\n          </MenuBlock>\n          <MenuBlock name=\"Ausdruck\" start={5}>\n            <MenuEntry>Journal</MenuEntry>\n            <MenuEntry to={siteIndex[6]}>\n              Kontenabfrage\n            </MenuEntry>\n            <MenuEntry to={siteIndex[7]}>\n              Konten - Saldo\n            </MenuEntry>\n            <MenuEntry>Konten - Plan</MenuEntry>\n          </MenuBlock>\n        </div>\n        <div>\n          <MenuBlock name=\"Laufende Verarbeitung\" start={9}>\n            <MenuEntry to={siteIndex[9]}>\n              Laufende Buchung\n            </MenuEntry>\n          </MenuBlock>\n          <MenuBlock name=\"Offene-Posten-Auswertungen\"\n          start={10}>\n            <MenuEntry>Kunde</MenuEntry>\n            <MenuEntry>Lieferant</MenuEntry>\n          </MenuBlock>\n          <MenuBlock name=\"Abschluss, Auswertungen\" start={12}>\n            <MenuEntry to={siteIndex[12]}>\n              Gewinn und Verlust\n            </MenuEntry>\n            <MenuEntry>Kontrollfunktion</MenuEntry>\n            <MenuEntry>Monatsabschluss</MenuEntry>\n          </MenuBlock>\n        </div>\n      </Flex>\n      <Flex>\n        <form onSubmit={e => onMenuSubmit(e)}>\n          <LabeledInput\n            autoFocus\n            label=\"Ihre Auswahl\"\n            size=\"2\"\n            value={site}\n            onChange={e => setSite(e.target.value)}\n          />\n        </form>\n      </Flex>\n    </>\n  )\n}\n\nexport default HauptMenue\n","import React, { useState, useEffect } from 'react'\nimport useKey from 'use-key-hook'\nimport { useAlert } from 'react-alert'\nimport { Redirect } from 'react-router-dom'\n\nimport { StatusHeader, Hr, Scrollable, UpperCase, Loading, Failed } from '../UIComponents'\nimport DateInput from '../Common/DateInput'\nimport KeyboardControls, { KeyButton } from '../KeyboardControls'\nimport Table from '../Table'\nimport useUrlForRead from '../useUrlForRead'\n\nconst toString = d => `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`\nconst createQuery = (from, to) => `/account-overview?from=${from}&to=${to}`\n\nfunction Kontenabfrage() {\n    const [from, setFrom] = useState('2000-01-01')\n    const [to, setTo] = useState(toString(new Date()))\n    const [query, setQuery] = useState(createQuery(from, to))\n\n    const [redirect, setRedirect] = useState()\n    useKey(() => setRedirect(true), { detectKeys: [27] });\n\n    const { result: accountOverview, loading, error: aoErrored } = useUrlForRead(query)\n    const { result: accountPlan, error: apErrored } = useUrlForRead('/account-plan')\n    const safeAccountPlan = (accountPlan || {})\n    const { result: accountConfig, acErrored } = useUrlForRead('/account-config')\n\n    const alert = useAlert()\n    useEffect(() => {\n        aoErrored && alert.error('Konnte Kontenabfrage nicht vom Server laden')\n        apErrored && alert.error('Konnte Kontenplan (konten.dbf) nicht vom Server laden')\n        acErrored && alert.error('Konnte Kontenkonfiguration (account-config.edn) nicht vom Server laden')\n    }, [aoErrored, apErrored, acErrored])\n\n    if (redirect)\n        return <Redirect to={redirect} />\n\n    return <>\n        <form onSubmit={e => {\n            e.preventDefault()\n            setQuery(createQuery(from, to))\n        }}>\n            <StatusHeader join >\n                Kontenabfrage\n                <DateInput value={from}\n                    onChange={e => setFrom(e.target.value)}\n                    autoFocus name='from' label=' von' />\n                &nbsp;<DateInput value={to}\n                    onChange={e => setTo(e.target.value)}\n                    name='to' label='bis' />\n            </StatusHeader>\n\n            <KeyboardControls>\n                <KeyButton\n                    active\n                    text='ESC: Hauptmenue'\n                    command={() => setRedirect('/')}\n                />\n                <KeyButton\n                    active\n                    text='&#8617; : anwenden'\n                    submit\n                />\n            </KeyboardControls>\n        </form>\n        <Hr />\n        {loading ? <Loading /> : aoErrored ? <Failed /> :\n            <Scrollable>\n                {Object.keys((accountOverview || {})).map(k => <>\n                    <UpperCase>{accountConfig ? accountConfig.kklasse_name[k] : k}</UpperCase>\n                    <Table accountingSummary attributes={[\n                        { name: \"Konto\", selector: r => r.account },\n                        { name: \"Kontoname\", selector: r => safeAccountPlan[r.account] ? safeAccountPlan[r.account].name_kont : r.account },\n                        { name: \"Haben\", summarize: 'H', suffix: 'H', number: true, selector: r => r.debit !== 0 && r.debit },\n                        { name: \"Soll\", summarize: 'S', suffix: 'S', number: true, selector: r => r.credit !== 0 && r.credit },\n                        { name: \"Saldo\", expressive: true, creditDebitSuffix: true, number: true, selector: r => r.debit - r.credit },\n                    ]}\n                        values={accountOverview[k]}\n                        keySelector={r => r.account}\n                        onRowClick={r => setRedirect(\"/konten-saldo/\" + r.account)}\n                    /></>\n                )}\n            </Scrollable>\n        }\n    </>\n}\n\nexport default Kontenabfrage","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from 'react-router-dom'\nimport useKey from 'use-key-hook'\nimport { useAlert } from 'react-alert'\n\nimport {\n  StatusHeader,\n  Hr,\n  Scrollable,\n  Centered,\n  Emphasize,\n  Loading,\n  Failed,\n} from '../UIComponents'\nimport Select from '../Common/Select'\nimport KeyboardControls, { KeyButton } from '../KeyboardControls'\nimport useUrlForRead from '../useUrlForRead'\nimport Table from '../Table'\n\nfunction KontenSaldo() {\n  const { accountNo } = useParams()\n  const [account, setAccount] = useState(accountNo)\n  const { result, loading, error } = useUrlForRead(\n    '/account-expressive?accountNo=' + accountNo\n  )\n  const { result: accountPlan, error: apErrored } = useUrlForRead(\n    '/account-plan'\n  )\n  const accountPlanOptions = Object.keys(accountPlan || {}).map(k => {\n    return {\n      value: accountPlan[k].konto_nr,\n      name: accountPlan[k].name_kont,\n    }\n  })\n\n  const alert = useAlert()\n  useEffect(() => {\n    error && alert.error('Konnte Kontensaldo nicht vom Server laden')\n    apErrored &&\n      alert.error('Konnte Kontenplan (konten.dbf) nicht vom Server laden')\n  }, [error, apErrored])\n\n  const [redirect, setRedirect] = useState()\n  useKey(() => setRedirect('/'), { detectKeys: [27] })\n\n  if (redirect) {\n    return <Redirect from={'/konten-saldo/' + account} to={redirect} />\n  }\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault()\n        setRedirect('/reload/konten-saldo/' + account)\n      }}\n    >\n      <StatusHeader\n        right={\n          <Select\n            options={accountPlanOptions}\n            autoFocus\n            name=\"account\"\n            value={account}\n            onChange={e => setAccount(e.target.value)}\n          />\n        }\n      >\n        <Centered>\n          Kontosaldo von{' '}\n          {accountPlan && accountPlan[accountNo] && (\n            <Emphasize>&nbsp;{accountPlan[accountNo].name_kont}</Emphasize>\n          )}\n        </Centered>\n      </StatusHeader>\n      <KeyboardControls>\n        <KeyButton\n          active\n          text=\"ESC: Hauptmenue\"\n          command={() => setRedirect('/')}\n        />\n        <KeyButton\n          active\n          text=\"Kontenabfrage\"\n          command={() => setRedirect('/kontenabfrage')}\n        />\n        <KeyButton active text=\"&#8617; : Kontensaldo\" type=\"submit\" />\n      </KeyboardControls>\n      <Hr />\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Failed />\n      ) : result && result.length < 1 ? (\n        <Centered>Keine Buchungen gefunden</Centered>\n      ) : (\n        <Scrollable>\n          <Table\n            attributes={[\n              { name: 'Beleg', selector: r => r.pos },\n              { name: 'Buchung', date: true, selector: r => r.accountedDate },\n              {\n                name: 'Haben',\n                summarize: 'H',\n                number: true,\n                suffix: 'H',\n                selector: r => r.debit !== 0 && r.debit,\n              },\n              {\n                name: 'Soll',\n                summarize: 'S',\n                number: true,\n                suffix: 'S',\n                selector: r => r.credit !== 0 && r.credit,\n              },\n              { name: 'Buchungstext', expressive: true, selector: r => r.text },\n              { name: 'Gegen', selector: r => r.gegen },\n            ]}\n            values={result}\n            keySelector={r => r.pos}\n            accountingSummary\n          />\n        </Scrollable>\n      )}\n    </form>\n  )\n}\n\nexport default KontenSaldo\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nfunction Reload() {\n    const { url, param } = useParams()\n    return <Redirect to={'/' + url + '/' + param} />\n}\n\nexport default Reload","import React from 'react'\n\nimport { Padding } from '../UIComponents'\nimport { EditFormKeyboardControls } from '../KeyboardControls'\n\nfunction KontenRecordForm(props) {\n    return <>\n        <Padding><form onSubmit={props.onSubmit}>editing...</form></Padding>\n        <EditFormKeyboardControls cancel={props.cancel} />\n    </>\n}\n\nexport default KontenRecordForm","import { useState } from 'react'\nimport useKey from 'use-key-hook'\n\nfunction useEditableRecord() {\n    const [recordTemplate, setRecordTemplate] = useState()\n    const selectMode = recordTemplate === undefined\n    const editMode = !selectMode\n\n    const cancel = () => setRecordTemplate(undefined)\n    useKey(() => cancel(), { detectKeys: [27] });\n\n    return { recordTemplate, setRecordTemplate, selectMode, editMode }\n}\n\nexport default useEditableRecord","import React, { useState } from 'react'\n\nimport SelectForm from '../Common/SelectForm'\nimport KontenRecordForm from './KontenRecordForm'\nimport { StatusHeader, Hr, Loading, Scrollable, Failed } from '../UIComponents'\nimport Table from '../Table'\nimport useUrlForRead from '../useUrlForRead'\nimport useEditableRecord from '../Common/useEditableRecord'\n\nconst indexSelector = r => r.konto_nr\n\nfunction Konten() {\n    const { result: atts, loading: loadingAtts, error: attsErrorerd } = useUrlForRead('/account-plan-atts')\n    const { result: accountMap, loading, error } = useUrlForRead('/account-plan')\n    const accountList = Object.keys(accountMap || {}).map(no => accountMap[no])\n\n    const [accountNo, setAccountNo] = useState('')\n\n    const { editMode, selectMode, recordTemplate, setRecordTemplate } = useEditableRecord()\n    const selectAccountNo = r => setRecordTemplate(accountMap[r])\n\n    return <><StatusHeader middle>Konten</StatusHeader>\n        {selectMode && <SelectForm\n            value={accountNo}\n            onChange={setAccountNo}\n            autoFocus\n            newRecordButtonText='neues Konto'\n            label='Kontennr.:'\n            onSubmit={() => selectAccountNo(accountNo)}\n        />}\n        {editMode && <KontenRecordForm defaultValues={recordTemplate} />}\n        <Hr />\n        {(loading || loadingAtts) ? <Loading /> : (error || attsErrorerd) ? <Failed /> : <Scrollable>\n            <Table\n                attributes={atts.map(att => att.toLowerCase()).map(att => {\n                    return { name: att, selector: v => v[att] }\n                })}\n                keySelector={p => p.konto_nr}\n                values={accountList}\n                onRowClick={r => selectAccountNo(indexSelector(r))}\n            />\n        </Scrollable>}\n    </>\n}\n\nexport default Konten","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport useKey from 'use-key-hook'\nimport { useAlert } from 'react-alert'\n\nimport KeyboardControls, { KeyButton } from '../KeyboardControls'\nimport { StatusHeader, Centered, Hr, Loading, Scrollable } from '../UIComponents'\nimport useUrlForRead from '../useUrlForRead'\nimport Table from '../Table'\n\nfunction Guv() {\n    const { result, loading, error } = useUrlForRead('/guv')\n    const alert = useAlert()\n    useEffect(() => error && alert.error(\"Konnte GuV nicht vom Server laden\"), [error])\n\n    const [redirect, setRedirect] = useState(false)\n    useKey(() => setRedirect('/'), { detectKeys: [27] });\n    if (redirect) return <Redirect to={redirect} />\n\n    const months = result ? Object.keys((result.ertraege || {})) : []\n    months.sort((a, b) => a === b ? 0 : a > b ? 1 : -1)\n    const values = []\n    let accumulated = 0\n    months.forEach(month => {\n        const aufwand = result.aufwendungen[month]\n        const ertrag = result.ertraege[month]\n        const gewinn = ertrag - aufwand\n        accumulated = gewinn + accumulated\n        values.push({ month, ertrag, aufwand, gewinn, accumulated })\n    })\n\n\n    return <><StatusHeader>\n        <Centered>Gewinn und Verlustrechnung</Centered>\n    </StatusHeader>\n        <KeyboardControls>\n            <KeyButton\n                active\n                text='ESC: Hauptmenue'\n                command={() => setRedirect('/')}\n            />\n        </KeyboardControls>\n        <Hr />\n        {loading ? <Loading /> : <Scrollable><Table accountingSummary attributes={[{\n            name: \"Monat\",\n            selector: r => r.month,\n            date:true\n        }, {\n            name: \"Aufwendungen\", summarize: 'S',\n            selector: r => r.aufwand,\n            number: true,\n            suffix: 'S'\n        }, {\n            name: \"Ertraege\", summarize: 'H',\n            selector: r => r.ertrag,\n            number: true,\n            suffix: 'H'\n        }, {\n            name: \"Gewinn\",\n            selector: r => r.gewinn,\n            number: true,\n            creditDebitSuffix: true,\n            customFooter: values.reduce((a, r) => r.gewinn + a, 0)\n        }, {\n            name: \"Akkumuliert\",\n            selector: r => r.accumulated,\n            number: true,\n            creditDebitSuffix: true,\n            customFooter: accumulated\n        },]}\n            values={values}\n            keySelector={r => r.month}\n        /></Scrollable>}\n    </>\n\n}\n\nexport default Guv","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ThemeProvider } from 'styled-components'\nimport clipperTheme from './clipperTheme'\nimport './App.css';\nimport LaufendeBuchung from './LaufendeBuchung'\nimport HauptMenue from './HauptMenue'\nimport Kontenabfrage from './Kontenabfrage'\nimport KontenSaldo from './KontenSaldo'\nimport Reload from './KontenSaldo/Reload'\nimport Konten from './Konten'\nimport Guv from './Guv'\n\nimport { Screen, Content } from './UIComponents'\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={clipperTheme}>\n      <Router>\n        <Screen>\n          <Content>\n            <Switch>\n              <Route path=\"/laufende-buchung\"><LaufendeBuchung /></Route>\n              <Route path='/reload/:url/:param'><Reload /></Route>\n              <Route path='/kontenabfrage'><Kontenabfrage /></Route>\n              <Route path='/konten-saldo/:accountNo'><KontenSaldo /></Route>\n              <Route path='/konten-saldo'><KontenSaldo /></Route>\n              <Route path='/guv'><Guv /></Route>\n              <Route path='/accounts'><Konten /></Route>\n              <Route path=\"/\"><HauptMenue /></Route>\n            </Switch>\n          </Content>\n        </Screen>\n      </Router>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { positions, Provider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n    timeout: 5000,\n    position: positions.BOTTOM_CENTER\n};\n\nconst Root = () => (\n    <Provider template={AlertTemplate} {...options}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}